shader_type canvas_item;

uniform sampler2D SCREEN_TEXTURE : hint_screen_texture, filter_linear_mipmap;
uniform float glitch_intensity : hint_range(0.0, 1.0);
uniform float chromatic_aberration : hint_range(0.0, 1.0);
uniform float compression_artifact : hint_range(0.0, 1.0);
uniform float datamosh_amount : hint_range(0.0, 1.0);

void fragment() {
    vec2 uv = SCREEN_UV;
    vec4 color = texture(SCREEN_TEXTURE, uv);

    // **Chromatic Aberration Effect**
    color.r = texture(SCREEN_TEXTURE, uv + vec2(chromatic_aberration * 0.01, 0.0)).r;
    color.b = texture(SCREEN_TEXTURE, uv - vec2(chromatic_aberration * 0.01, 0.0)).b;

    // **Datamosh Effect (Horizontal Offsets)**
    uv.x += sin(TIME * 10.0) * datamosh_amount * 0.05;
    color = mix(color, texture(SCREEN_TEXTURE, uv), datamosh_amount);

    // **JPEG Compression Effect (Pixelation)**
    float block_size = 1.0 / (10.0 + compression_artifact * 90.0);
    uv = floor(uv / block_size) * block_size;
    color = mix(color, texture(SCREEN_TEXTURE, uv), compression_artifact);

    // **Final Output**
    COLOR = mix(texture(SCREEN_TEXTURE, SCREEN_UV), color, glitch_intensity);
}
